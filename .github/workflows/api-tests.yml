name: API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Cho phép chạy thủ công từ giao diện GitHub

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Set environment variables
        run: |
          echo "SPRINT_FOLDER=sprint5-with-bugs" >> $GITHUB_ENV
          echo "DISABLE_LOGGING=false" >> $GITHUB_ENV
      
      - name: Start Docker Compose services
        run: |
          docker-compose up -d
          echo "Docker Compose services started"
      
      - name: Check Docker containers
        run: docker-compose ps
      
      - name: Wait for API to be ready
        run: |
          echo "Waiting for API service to be ready..."
          # Thử kết nối đến API endpoint mỗi 5 giây trong tối đa 60 giây
          timeout=60
          counter=0
          until $(curl --output /dev/null --silent --head --fail http://localhost:8091/api/health); do
            if [ $counter -eq $timeout ]; then
              echo "ERROR: API did not start within $timeout seconds."
              docker-compose logs
              exit 1
            fi
            printf '.'
            counter=$((counter+5))
            sleep 5
          done
          echo "API is ready!"
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Newman
        run: npm install -g newman newman-reporter-htmlextra
      
      - name: Create reports directory
        run: mkdir -p reports
      
      - name: Run Add Product API Tests
        run: |
          newman run "sprint5-with-bugs/api-testing/postman/Add Product.postman_collection.json" -d "sprint5-with-bugs/api-testing/postman/AddProduct.csv" --reporters cli,htmlextra --reporter-htmlextra-export reports/add-product-report.html
      
      - name: Run Edit Product API Tests
        run: |
          newman run "sprint5-with-bugs/api-testing/postman/Edit Product.postman_collection.json" -d "sprint5-with-bugs/api-testing/postman/EditProduct.csv" --reporters cli,htmlextra --reporter-htmlextra-export reports/edit-product-report.html
      
      - name: Run Search and Filter API Tests
        run: |
          newman run "sprint5-with-bugs/api-testing/postman/Search and Filter.postman_collection.json" -d "sprint5-with-bugs/api-testing/postman/SearchFilter.csv" --reporters cli,htmlextra --reporter-htmlextra-export reports/search-filter-report.html
      
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-reports
          path: reports/
      
      - name: Show Docker logs on failure
        if: failure()
        run: |
          echo "==== Docker Container Logs ===="
          docker-compose logs
      
      - name: Shutdown Docker Compose
        if: always()
        run: docker-compose down -v
